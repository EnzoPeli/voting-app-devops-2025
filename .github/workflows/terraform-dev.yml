name: "Terraform Plan & Apply + K8s Deploy (Dev)"

on:
  push:
    branches:
      - develop

jobs:
  terraform:
    name: Terraform Plan & Apply on Dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        working-directory: infra
        run: terraform init

      - name: Terraform Plan (Dev)
        working-directory: infra
        run: terraform plan -var-file=dev.tfvars

      - name: Terraform Apply (Dev)
        if: github.ref == 'refs/heads/develop'
        working-directory: infra
        run: terraform apply -auto-approve -var-file=dev.tfvars
        
  kubernetes:
    name: Deploy to Kubernetes (Dev)
    needs: terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'default'
          
      - name: Configure kubectl for EKS
        run: aws eks update-kubeconfig --name voting-cluster --region ${{ secrets.AWS_DEFAULT_REGION }}
        
      - name: Create namespace if not exists
        run: kubectl apply -f k8s/namespace-dev.yaml
        
      - name: Set environment variables and deploy
        env:
          NAMESPACE: dev
        run: |
          chmod +x ./scripts/apply-manifests.sh
          ./scripts/apply-manifests.sh
          
      - name: Verify deployment
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pods -n dev --all --timeout=300s
          echo "Current pods status:"
          kubectl get pods -n dev
          echo "Current services status:"
          kubectl get services -n dev
          echo "Current ingress status:"
          kubectl get ingress -n dev
